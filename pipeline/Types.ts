// raw ID that comes from the platform (e.g 9876554321)
export type RawID = string | number;

// internal ID that is used in the pipeline (incremental)
export type ID = number;

// offset in bytes in a Uint8Array buffer
export type Address = number;

// UTC timestamp
export type Timestamp = number;

// date with format "YYYY-MM-DD"
export type DateStr = string;

// available platforms
export type Platform = "discord" | "telegram" | "whatsapp";

// configuration, set in the UI
export interface ReportConfig {
    platform: Platform;
}

// the generated object after processing
export interface Database {
    config: ReportConfig;
    title: string;
    time: {
        minDate: DateStr;
        maxDate: DateStr;
        numDays: number;
        numMonths: number;
    };

    channels: Channel[];
    authors: Author[];

    serialized?: SerializedData;
}

// additional serialized data (like messages)
export type SerializedData = Uint8Array;

/*
    Names are short to reduce the size when it's transferred from the Worker to the main thread
    It does not help with compression

    I-(Channel/Author) versions are the generated by the parsers
*/

export interface IChannel {
    // name
    n: string;
}

export interface Channel extends IChannel {
    // name searchable
    ns: string;
    // messages location
    msgAddr: Address;
    msgCount: number;
}

export interface IAuthor {
    // name
    n: string;
    // bot
    b: boolean;
    // Discord discriminant (#XXXX)
    d?: number;
    // Discord avatar (user_id/user_avatar)
    da?: string;
}

export interface Author {
    // name searchable
    ns: string;
}

export interface IMessage {
    authorId: ID;
    channelId: ID;
    timestamp: Timestamp;
    content: string;
}
